generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model accounts {
  id         String       @id @db.VarChar(255)
  name       String       @db.VarChar(255)
  email      String       @unique(map: "accounts_email_unique") @db.VarChar(255)
  password   String       @db.VarChar(255)
  characters characters[]
}

model alchemical_items {
  id         String  @id @db.VarChar(255)
  item_id    String? @db.VarChar(255)
  brew_price Int
  brew_time  String  @db.VarChar(255)
  effects    String
  items      items?  @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "alchemical_items_item_id_foreign")
}

model characters {
  id               String    @id @db.VarChar(255)
  level            Int
  experience       Int
  character_points Int
  account_id       String    @db.VarChar(255)
  creature_id      String    @db.VarChar(255)
  accounts         accounts  @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "characters_account_id_foreign")
  creatures        creatures @relation(fields: [creature_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "characters_creature_id_foreign")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model content_children {
  parentId                                     String   @db.VarChar(255)
  childId                                      String   @db.VarChar(255)
  contents_content_children_childIdTocontents  contents @relation("content_children_childIdTocontents", fields: [childId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "content_children_childid_foreign")
  contents_content_children_parentIdTocontents contents @relation("content_children_parentIdTocontents", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "content_children_parentid_foreign")

  @@ignore
}

model contents {
  id                                                   String             @id @db.VarChar(255)
  ownerId                                              String             @db.VarChar(255)
  type                                                 String             @db.VarChar(255)
  title                                                String             @db.VarChar(255)
  icon                                                 String?            @db.VarChar(255)
  cover                                                String?            @db.VarChar(255)
  properties                                           Json
  value                                                String
  content_children_content_children_childIdTocontents  content_children[] @relation("content_children_childIdTocontents") @ignore
  content_children_content_children_parentIdTocontents content_children[] @relation("content_children_parentIdTocontents") @ignore
}

model creatures {
  id             String        @id @db.VarChar(255)
  name           String        @db.VarChar(255)
  icon           String        @db.VarChar(255)
  alignment      String        @db.VarChar(255)
  description    String?
  gold           Int
  status_effects Json
  hp             Int
  mp             Int
  strength       Int
  dexterity      Int
  constitution   Int
  intelligence   Int
  wisdom         Int
  charisma       Int
  characters     characters[]
  equipments     equipments[]
  inventories    inventories[]
}

model equipments {
  id          String    @id @db.VarChar(255)
  item_id     String?   @db.VarChar(255)
  creature_id String    @db.VarChar(255)
  slot_name   String    @db.VarChar(255)
  creatures   creatures @relation(fields: [creature_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "equipments_creature_id_foreign")
  items       items?    @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "equipments_item_id_foreign")
}

model gems {
  id         String  @id @db.VarChar(255)
  item_id    String? @db.VarChar(255)
  magic_tier Int
  items      items?  @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "gems_item_id_foreign")
}

model inventories {
  id             String           @id @db.VarChar(255)
  size           Int
  space_in_use   Int?             @default(0)
  creature_id    String           @db.VarChar(255)
  creatures      creatures        @relation(fields: [creature_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "inventories_creature_id_foreign")
  inventory_item inventory_item[]
}

model inventory_item {
  id           String       @id @db.VarChar(255)
  inventory_id String?      @db.VarChar(255)
  item_id      String?      @db.VarChar(255)
  quantity     Int
  inventories  inventories? @relation(fields: [inventory_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "inventory_item_inventory_id_foreign")
  items        items?       @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "inventory_item_item_id_foreign")
}

model items {
  id               String             @id @db.VarChar(255)
  name             String             @db.VarChar(255)
  type             String             @db.VarChar(255)
  sub_type         String?            @db.VarChar(255)
  description      String
  price            Int
  weight           Int
  rarity           String             @db.VarChar(255)
  charges          Int?               @default(0)
  requirements     Json?
  alchemical_items alchemical_items[]
  equipments       equipments[]
  gems             gems[]
  inventory_item   inventory_item[]
  shields_armors   shields_armors[]
  torch_registries torch_registries[]
  weapons          weapons[]
}

model shields_armors {
  id                  String  @id @db.VarChar(255)
  item_id             String? @db.VarChar(255)
  damage_reduction    Json
  properties          Json
  initiative_modifier Int
  items               items?  @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "shields_armors_item_id_foreign")
}

model torch_registries {
  id      String  @id @db.VarChar(255)
  item_id String? @db.VarChar(255)
  charges Int
  is_lit  Boolean
  items   items?  @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "torch_registries_item_id_foreign")
}

model weapons {
  id                  String  @id @db.VarChar(255)
  item_id             String? @db.VarChar(255)
  damage              Json
  properties          Json
  initiative_modifier Int
  distance            Int
  items               items?  @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "weapons_item_id_foreign")
}
